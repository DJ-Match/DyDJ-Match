#!/bin/bash

########################################################################
# Copyright (C) 2013 - 2023 : Kathrin Hanauer                          #
#                                                                      #
# This file is part of Algora.                                         #
#                                                                      #
# Algora is free software: you can redistribute it and/or modify       #
# it under the terms of the GNU General Public License as published by #
# the Free Software Foundation, either version 3 of the License, or    #
# (at your option) any later version.                                  #
#                                                                      #
# Algora is distributed in the hope that it will be useful,            #
# but WITHOUT ANY WARRANTY; without even the implied warranty of       #
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the        #
# GNU General Public License for more details.                         #
#                                                                      #
# You should have received a copy of the GNU General Public License    #
# along with Algora.  If not, see <http://www.gnu.org/licenses/>.      #
#                                                                      #
# Contact information:                                                 #
#   http://algora.xaikal.org                                           #
########################################################################

print_usage() {
	echo "Usage: $0 [-f] <PATH_TO_HEADER_FILE>"
}

VERSION_HEADER=$1

if [ -z "${VERSION_HEADER}" ]
then
	print_usage
	exit 1
fi

[ -z "${GIT_CMD}" ] && GIT_CMD=$(which git 2>/dev/null)
[ -n "${GIT_CMD}" ] || eval 'echo Binary "git" not found. Please specify its location explicitly via the GIT_CMD variable." 1>&2; exit 1'

GIT_REVISION=$(${GIT_CMD} log --pretty=format:'%H' -n 1)
GIT_DATE=$(${GIT_CMD} log --pretty=format:'%aI' -n 1)
GIT_TIMESTAMP=$(${GIT_CMD} log --pretty=format:'%at' -n 1)

if [ $? -ne 0 ]; then
    echo "No git"
    GIT_REVISION="NA"
    GIT_DATE="NA"
    GIT_TIMESTAMP="NA"
else
    echo "Git revision: ${GIT_REVISION}"
    echo "Git date: ${GIT_DATE}"
    echo "Git timestamp: ${GIT_TIMESTAMP}"
fi

if grep -q $GIT_REVISION $VERSION_HEADER; then
    echo "Same revision as in ${VERSION_HEADER}."
else
    GIT_REVISION_IN_HEADER="  static constexpr char GIT_REVISION[] = \"${GIT_REVISION}\";"
    GIT_DATE_IN_HEADER="  static constexpr char GIT_DATE[] = \"${GIT_DATE}\";"
    GIT_TS_IN_HEADER="  static constexpr char GIT_TIMESTAMP[] = \"${GIT_TIMESTAMP}\";"


    #sed -i -e "s/^.*GIT_REVISION.*$/${GIT_REVISION_IN_HEADER}/" $VERSION_HEADER
    #sed -i -e "s/^.*GIT_DATE.*$/${GIT_DATE_IN_HEADER}/" $VERSION_HEADER
    #sed -i -e "s/^.*GIT_TIMESTAMP.*$/${GIT_TS_IN_HEADER}/" $VERSION_HEADER

    HEADER_TEXT="
    #ifndef ALGORAAPP_INFO_H
    #define ALGORAAPP_INFO_H

    namespace Algora {

    struct AlgoraAppInfo {
      ${GIT_REVISION_IN_HEADER}
      ${GIT_DATE_IN_HEADER}
      ${GIT_TS_IN_HEADER}
    };
    }

    #endif
    "
    echo "$HEADER_TEXT" > $VERSION_HEADER
fi
